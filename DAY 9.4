Understand about Transform in CSS.
---->
  transform: translate()
 The translate() function is used to move an element along the X and Y axes within its containing block. It takes two values: one for horizontal translation (X-axis) and one for vertical translation (Y-axis).

 translate(x, y) - Moves the element by x units horizontally and y units vertically.  

 transform: scale()
 The scale() function takes one or two values:

 scale(x) - Scales the element by a factor of x along both the X and Y axes. A value of 1 is the original size, values greater than 1 make it larger, and values less than 1 make it smaller.
 scale(x, y) - Scales the element by a factor of x along the X-axis and y along the Y-axis. You can use different values for horizontal and vertical scaling. 

 transform: rotate()
 The rotate() function takes one parameter:

 rotate(angle) - Specifies the angle of rotation in degrees. Positive values rotate clockwise, and negative values rotate counterclockwise. 

 The skew() method skews an element along the X and Y-axis by the given angles.
 You can use this to create visually interesting effects, such as tilting or slanting elements. 

 The transform-origin property in CSS allows you to specify the point around which a transformation should occur. It determines the origin point for transformation functions like rotate, scale, skew, and translate. 
 Understanding how transform-origin works is crucial for controlling the position and behavior of transformed elements.

 Perspective to create a 3d world. It's a line between our eyes and computer screen.

 code---------------------------------CSS file-------------------------------------------------------------------------------------------------
 *{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }
  
  body {
    background-color: #2b3033;
  }
  .box{
      width: 250px;
      height: 250px;
      background-color: #4861ec;
      box-shadow: 0 0 0px 15px #353f6d;
      /* margin: 20px;
      color: #fff;
      font-size: 2rem;
      text-transform: capitalize;
      display: flex;
      justify-content: center;
      align-items: center; */
  }
  .container {
    width: 100vw;
    height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 30px;
    box-shadow: inset 0 0 0 5px #4861ec;

  }
  .container img{
    width:30%;
    height:auto;
    transition:all 1s linear;
  }
  .container img:hover{
     /* transform:translateX(300px);        */          /* right */
       /* transform:translateX(-300px);   
        transform:translateY(150px);
       transform:translateY(-150px); */
       /* short hand to write */
      /* translate:-300px 0;     */             /* x and y is define */
       /* translate:0 100px;
       translate: 0 -100px;
       translate: */
     /* scale:2;                /*  directly we can write in new css  zoom in */
    /*  scale:0.5;              /* zoom out */
    /*  transform:scaleX(2); */      /* horizontal expanding
    /*  transform:scaley(2);  */     /* vertical expanding */
     /* transform:rotate(90deg);
     transform:rotate(180deg); */
     transform:skew(45deg);   /* tilt 45deg */
     transform:skewX(20deg);
     transform:skewY(20deg);
     transform:skewY(-20deg);
     transform-origin:left;
     transform-origin:right;
  }
  -------------------------------------------------------------HTML file---------------------------------------------------------------------
  <!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Transform</title>
    <link rel="stylesheet" href="style.css">
</head>
<body>
    <div class="container">
         <!-- <div class="box">translate</div>  -->
         <!-- <div class="box">scale</div>
         <div class="box">Rotate</div> 
         <div class="box">skew</div>
         <div class="box">img</div>  -->
        <img class="box" src="./pexels-designecologist-1779487.jpg" alt="image of computer">
    </div>
</html>
